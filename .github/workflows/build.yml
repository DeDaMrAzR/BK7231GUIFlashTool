name: Build and Release BK7231GUIFlashTool

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Install NuGet
      uses: NuGet/setup-nuget@v2

    - name: Restore NuGet packages
      run: nuget restore BK7231Flasher/BK7231Flasher.csproj -SolutionDirectory .

    - name: Build the project
      run: msbuild BK7231Flasher/BK7231Flasher.csproj /p:Configuration=Release /p:OutDir=BK7231Flasher\bin\Release\

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: BuildOutput
        path: |
          BK7231Flasher/bin/Release/

  release:
    needs: build
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: BuildOutput

    - name: Debug Build Output
      run: |
        dir BK7231Flasher\bin
        dir BK7231Flasher\bin\Release

    - name: Create ZIP File
      run: |
        mkdir release
        powershell Compress-Archive -Path "BK7231Flasher\bin\Release\*" -DestinationPath "release\BK7231GUIFlashTool-v${{ github.run_number }}.zip"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: BK7231GUIFlashTool-v${{ github.run_number }}
        body: |
          Automated release for BK7231GUIFlashTool.
          Includes the latest built binaries.
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "release/BK7231GUIFlashTool-v${{ github.run_number }}.zip"
        asset_name: "BK7231GUIFlashTool-v${{ github.run_number }}.zip"
        asset_content_type: application/zip
